{"version":3,"sources":["character.js","character.mjs","gameplay.js","gameplay.mjs","keyboard.js","keyboard.mjs","gamepad.js","gamepad.mjs","touchpad.js","touchpad.mjs","sfx.js","sfx.mjs"],"names":["window","character","el","document","querySelector","position","x","y","maxX","walk","isWalking","isWalkingGamepad","isKeyDown","isSpeedTouchDown","speed","direction","sideChangeTime","jump","isJumping","lock","jumpPos","max","timeouts","stopWalking","startWalking","coins","number","score","lives","fps","canvas","createElement","width","height","context","getContext","fillStyle","fillRect","body","appendChild","e","isMobile","test","navigator","userAgent","enemyIndex","enemies","querySelectorAll","forEach","dataset","index","push","positionx","parseFloat","positiony","walking","changingDirection","stopLack","isInVP","currentFrame","world","update","GAME_SPEED","collisions","getCollisions","windowWidthInVh","innerWidth","innerHeight","style","marginLeft","i","isElementInViewport","classList","contains","getDistance","remove","_loop","enemiesCollisions","enemyIsDying","undefined","dieDirection","randomNum","Math","random","enemy","canWalk","newDirection","j","length","collision","must","isCharacterUpper","canChange","element","playSound","setTimeout","add","addScore","jumpFill","jumpDelta","canFall","round","killing","transform","concat","_loop2","_i2","isBlock","blockCollisions","_loop3","coin","textContent","toString","padStart","_loop4","_i3","clearTimeout","setInterval","requestAnimationFrame","time","updateTime","timeNum","timer","clearInterval","rect","getBoundingClientRect","windowHeight","documentElement","clientHeight","windowWidth","clientWidth","isCompletelyVisible","top","left","bottom","right","isPartiallyVisible","is","xAdd","arguments","yAdd","obj","log","classes","collidables","charRect","charCenterX","charCenterY","leftAdd","collidable","collidableRect","collidableCenterX","collidableCenterY","distanceX","abs","distanceY","distanceInPx","sqrt","console","topAdd","verticalOverlap","min","horizontalOverlap","distance","sort","a","b","isStopWalking","type","mute","goToLeft","isController","Date","now","goToRight","element1","element2","rect1","addEventListener","event","key","toLowerCase","preventDefault","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","F","s","n","done","value","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","slice","constructor","name","from","arr","len","arr2","gameLoop","_step","_iterator","getGamepads","gamepad","processGamepadInput","buttons","pressed","xAxis","axes","id","cLeft","cRight","cTop","cBottom","cA","cB","cC","cD","handleTouchUp","isTouchscreenDevice","maxTouchPoints","msMaxTouchPoints","_typeof","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","apply","soundFiles","loadSound","_x","_loadSound","_callee","url","response","arrayBuffer","_context","fetch","audioContext","decodeAudioData","AudioContext","webkitAudioContext","audioBuffers","activeSources","stopSource","source","indexOf","splice","createBufferSource","buffer","connect","destination","start","all","map","buffers"],"mappings":"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","file":"scripts.js","sourcesContent":[null,"window.character = {\n    el: document.querySelector(\".character\"),\n    position: {\n        x: 0,\n        y: 0,\n        maxX: 0,\n    },\n    walk:{\n        isWalking: false,\n        isWalkingGamepad: false,\n        isKeyDown: false,\n        isSpeedTouchDown: false,\n        speed: 'slow',\n        direction: 'right',\n        sideChangeTime: 0\n    },\n    jump:{\n        isJumping: false,\n        lock: false,\n        jumpPos: 0,\n        max: 30,\n    },\n    timeouts: {\n        stopWalking: null,\n        startWalking: null,\n    },\n    coins: {\n        number: 0,\n        el: document.querySelector(\".ui .coins\")\n    },\n    score: {\n        number: 0,\n        el: document.querySelector(\".ui .score\")\n    },\n    lives: 3,\n    fps: 60,\n}\n\n\ntry {\n    const canvas = document.createElement(\"canvas\");\n\n    canvas.width = 100;\n    canvas.height = 100; // Replace with your desired height\n\n    const context = canvas.getContext(\"2d\");\n\n    context.fillStyle = \"transparent\";\n    context.fillRect(0, 0, 100, 100); // (x, y, width, height)\n\n    document.body.appendChild(canvas);\n} catch (e) {\n\n}\n\nconst isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\nif (isMobile) {\n    character.fps = 30; // Set FPS to 30 for mobile\n}\n\n\nlet enemyIndex = 0;\nwindow.enemies = [];\ndocument.querySelectorAll(\".enemy\").forEach(function (el) {\n    el.dataset.index = enemyIndex;\n    enemyIndex++;\n    enemies.push({\n        el,\n        position: {\n            x: (el.dataset.positionx) ? parseFloat(el.dataset.positionx) : 0,\n            y: (el.dataset.positiony) ? parseFloat(el.dataset.positiony) : 0\n        },\n        walk: {\n            isWalking: el.dataset.walking === \"true\",\n            direction: el.dataset.direction,\n            changingDirection: false\n        },\n        jump:{\n            isJumping: false,\n            lock: false,\n            jumpPos: 0,\n            max: 10,\n        },\n        timeouts: {\n            stopLack: null,\n        },\n        isInVP: false\n    })\n});",null,"\n\n\ncharacter.currentFrame = 0;\nvar world = document.querySelector(\".current-world\")\n\nfunction update() {\n    if(character.fps > 60)\n        character.fps = 60;\n\n    if(character.currentFrame < character.fps)\n        character.currentFrame ++;\n    else\n        character.currentFrame = 0;\n\n    const GAME_SPEED = 60 * (60 / character.fps);\n    const collisions = getCollisions(character.el);\n\n    //const world = character.el.parentElement;\n    //const charRect = character.el.getBoundingClientRect();\n    const windowWidthInVh = (window.innerWidth / window.innerHeight) * 100;\n    if(character.position.x - windowWidthInVh/5 > character.position.maxX && character.position.maxX < world.dataset.width - windowWidthInVh)\n        character.position.maxX = character.position.x - windowWidthInVh/5;\n    world.style.marginLeft = -character.position.maxX + \"vh\";\n\n\n\n    if(character.currentFrame === 0 || character.currentFrame === character.fps / 2) {\n        for(let i in enemies) {\n            enemies[i].isInVP = isElementInViewport(enemies[i].el);\n\n            if(!enemies[i].isInVP){\n                if(enemies[i].el.classList.contains(\"in-lack-running\") || getDistance(character.el, enemies[i].el) < 0){\n                    enemies[i].el.remove()\n                }\n            }\n        }\n    }\n\n    for(let i in enemies) {\n        if(enemies[i].isInVP){\n            if (enemies[i].walk.isWalking && !enemies[i].el.classList.contains(\"killed\")) {\n\n                const enemiesCollisions = getCollisions(enemies[i].el);\n\n                let speed = GAME_SPEED / 300;\n\n                const isInLack = enemies[i].el.classList.contains(\"in-lack\");\n                const isInLackRunning = enemies[i].el.classList.contains(\"in-lack-running\");\n                if(isInLack){\n                    speed = 0;\n                }\n                if(isInLackRunning) {\n                    speed = GAME_SPEED / 55;\n                }\n\n                const enemyIsDying = enemies[i].el.classList.contains(\"killing\");\n                if(enemyIsDying) {\n                    speed = speed * 2.5;\n                    if(enemies[i].walk.dieDirection === undefined) {\n                        enemies[i].walk.dieDirection = 1;\n                        const randomNum = Math.random();\n                        if (randomNum < 0.5) {\n                            enemies[i].walk.direction = \"right\";\n                        } else {\n                            enemies[i].walk.direction = \"left\";\n                        }\n                    }\n                }\n\n                const enemy = enemies[i];\n                let canWalk = true;\n                let newDirection = enemy.walk.direction === \"right\" ? \"left\" : \"right\";\n\n                for (let j = 0; j < enemiesCollisions.length; j++) {\n                    const collision = enemiesCollisions[j];\n\n                    if (collision.direction.x === enemy.walk.direction && collision.direction.must === \"y\" && !collision.isCharacterUpper) {\n                        let canChange = true;\n\n                        if (enemy.el.classList.contains(\"in-lack-running\") && collision.element.classList.contains(\"enemy\"))\n                            canChange = false;\n\n                        if (!enemy.walk.changingDirection && !enemy.el.classList.contains(\"killing\") && canChange) {\n                            enemy.walk.direction = newDirection;\n                            enemy.walk.changingDirection = true;\n                            if(enemy.el.classList.contains(\"in-lack-running\")){\n                                playSound(4);\n                            }\n                            setTimeout(function () {\n                                enemy.walk.changingDirection = false;\n                            }, 25);\n                        }\n\n                        canWalk = false;\n\n                        if (collision.element.classList.contains(\"in-lack-running\") && enemy.el.classList.contains(\"enemy\")\n                            && !enemy.el.classList.contains(\"killing\")) {\n                            enemy.el.classList.add(\"killing\");\n                            playSound(12);\n                            enemy.jump.isJumping = true;\n\n                            addScore(100, getDistance(character.el,collision.element, 0, enemy));\n                        }\n\n                        if (enemy.el.classList.contains(\"in-lack-running\") && collision.element.classList.contains(\"enemy\") &&\n                            !collision.element.classList.contains(\"killing\")) {\n                            collision.element.classList.add(\"killing\");\n                            playSound(12);\n                            enemies[collision.element.dataset.index].jump.isJumping = true;\n\n                            addScore(100, getDistance(character.el,enemy.el), 0, enemy);\n                        }\n                    }\n                }\n\n                if (canWalk) {\n                    enemy.position.x += (enemy.walk.direction === \"right\" ? speed : -speed);\n                }\n\n\n                if (enemy.jump.isJumping) {\n                    enemy.el.classList.add(\"jump\");\n                    if (enemy.jump.jumpPos < enemy.jump.max) {\n                        enemy.jump.lock = true;\n\n                        let jumpFill = enemy.jump.jumpPos > 15 ? GAME_SPEED / enemy.jump.jumpPos / 40 : 0;\n                        const jumpDelta = GAME_SPEED / (70 - enemy.jump.max) - enemy.jump.jumpPos / 40 - jumpFill;\n                        enemy.jump.jumpPos += jumpDelta;\n                        enemy.position.y += jumpDelta;\n\n                        if (enemy.jump.jumpPos > 7) {\n                            for (let j = 0; j < collisions.length; j++) {\n                                if (collisions[j].direction.y === \"top\" && collisions[j].direction.must === \"x\") {\n                                    enemy.jump.isJumping = false;\n                                    break;\n                                }\n                            }\n                        }\n                    } else {\n                        enemy.jump.isJumping = false;\n                    }\n                } else {\n                    if (enemy.position.y > 0 || enemyIsDying) {\n                        let canFall = true;\n\n                        if (!enemyIsDying) {\n                            for (let j = 0; j < enemiesCollisions.length; j++) {\n                                if (enemiesCollisions[j].direction.y === \"bottom\" && enemiesCollisions[j].direction.must === \"x\") {\n                                    canFall = false;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (canFall) {\n                            let jumpFill = enemy.jump.jumpPos > 15 ? GAME_SPEED / enemy.jump.jumpPos / 40 : 0;\n                            const jumpDelta = GAME_SPEED / (70 - enemy.jump.max) - (enemy.jump.jumpPos / 40) - jumpFill;\n                            enemy.jump.jumpPos -= jumpDelta;\n                            enemy.position.y -= jumpDelta;\n                            enemy.jump.lock = true;\n                        } else {\n                            enemy.position.y = Math.round(enemy.position.y / 6.66667) * 6.66667;\n                            enemy.jump.jumpPos = 0;\n                            enemy.jump.lock = false;\n                        }\n                    } else {\n                        enemy.jump.lock = false;\n                        enemy.jump.isJumping = false;\n                        enemy.jump.jumpPos = 0;\n                        if (enemy.position.y < 0)\n                            enemy.position.y = 0;\n\n                        enemy.position.y = Math.round(enemy.position.y / 6.66667) * 6.66667;\n                    }\n                }\n\n\n\n                let killing = '';\n                if(enemyIsDying) {\n                    killing = 'rotate(180deg)'\n                }\n\n                if (enemies[i].walk.direction === \"left\") {\n                    enemies[i].el.style.transform = `translate(${parseFloat(enemies[i].position.x)}vh, ${-parseFloat(enemies[i].position.y)}vh) ` + killing;\n                } else {\n                    enemies[i].el.style.transform = `translate(${parseFloat(enemies[i].position.x)}vh, ${-parseFloat(enemies[i].position.y)}vh) rotateY(-180deg) ` + killing;\n                }\n\n            }\n        }\n    }\n\n    if (character.jump.isJumping) {\n        character.el.classList.add(\"jump\");\n        if (character.jump.jumpPos < character.jump.max) {\n            character.jump.lock = true;\n\n            let jumpFill = 0;\n            if(character.jump.jumpPos > 15){\n                jumpFill = GAME_SPEED / character.jump.jumpPos / 40;\n            }\n            character.jump.jumpPos += GAME_SPEED / (70-character.jump.max) - character.jump.jumpPos / 40 - jumpFill;\n            character.position.y += GAME_SPEED / (70-character.jump.max) - character.jump.jumpPos / 40 - jumpFill;\n\n            if(character.jump.jumpPos > 7)\n            for(let i in collisions){\n                if(collisions[i].direction.y === \"top\" && collisions[i].direction.must === \"x\"){\n                    //console.log(collisions[i].direction)\n                    character.jump.isJumping = false;\n\n                    const isBlock = collisions[i].element.classList.contains(\"block\") && !collisions[i].element.classList.contains(\"destroying\");\n                    if (isBlock || collisions[i].element.classList.contains(\"block-ques\")) {\n\n                        let killing = false;\n                        const blockCollisions = getCollisions(collisions[i].element);\n                        for (let j in blockCollisions){\n                            if(blockCollisions[j].element.classList.contains(\"enemy\")){\n                                // kill enemies upper block\n\n                                blockCollisions[j].element.classList.add(\"killing\");\n\n                                killing = true;\n                                playSound(12)\n                                enemies[blockCollisions[j].element.dataset.index].jump.isJumping = true\n\n                                addScore(100, 0, 0, enemies[blockCollisions[j].element.dataset.index])\n\n                                setTimeout(function () {\n                                    blockCollisions[j].element.remove();\n                                }, 2000)\n                            }\n                        }\n\n                        if(collisions[i].element.dataset.coin && collisions[i].element.dataset.coin > 0){\n                            //if(collisions[i].element.classList.contains(\"block-ques\") && collisions[i].element.dataset.coin > 1)\n                            //    collisions[i].element.dataset.coin = 1;\n\n                            collisions[i].element.classList.add(\"hit-block-animation\");\n                            collisions[i].element.classList.add(\"coin-block-animation\");\n                            collisions[i].element.dataset.coin-=1;\n                            character.coins.number++;\n\n\n                            if(character.coins.number > 99){\n                                character.coins.number = 0;\n                                character.lives++;\n                                playSound(0)\n                            } else {\n                                if(!killing)\n                                    playSound(5)\n                            }\n\n                            character.coins.el.textContent = character.coins.number.toString().padStart(2, '0');\n\n                            addScore(200)\n\n\n                            if(collisions[i].element.dataset.coin == 0){\n                                collisions[i].element.classList.add(\"block-empty\");\n                            }\n                        } else if(collisions[i].element.dataset.coin == 0){\n                            playSound(4)\n                        } else {\n                            if(character.el.classList.contains(\"big\") && isBlock){\n                                collisions[i].element.classList.add(\"destroying\");\n\n                                for(let j = 1; j <= 4; j++){\n                                    let e = document.createElement(\"div\");\n                                    e.classList.add(\"break\", \"break-\" + j);\n                                    collisions[i].element.appendChild(e);\n                                }\n\n                                setTimeout(() => {\n                                    collisions[i].element.remove();\n                                }, 700);\n\n                                playSound(3)\n                            } else {\n                                collisions[i].element.classList.add(\"hit-block-animation\");\n\n                                if(!killing)\n                                    playSound(4)\n                            }\n\n                        }\n\n                        setTimeout(() => {\n                            collisions[i].element.classList.remove(\"hit-block-animation\");\n                            if(collisions[i].element.classList.contains(\"coin-block-animation\")) {\n                                collisions[i].element.classList.remove(\"coin-block-animation\");\n                                collisions[i].element.classList.add(\"coin-block-animation2\");\n\n                                setTimeout(() => {\n                                    collisions[i].element.classList.remove(\"coin-block-animation2\");\n                                }, 600);\n                            }\n                        }, 300);\n\n\n                    }\n\n                    break;\n                }\n            }\n\n        } else {\n            character.jump.isJumping = false;\n        }\n    } else {\n        if (character.position.y > 0) {\n            let canFall = true;\n            for(let i in collisions){\n                if(collisions[i].direction.y === \"bottom\" && collisions[i].direction.must === \"x\"){\n                    if(collisions[i].element.classList.contains(\"enemy\")){\n                        if(collisions[i].element.classList.contains(\"goomba\") && !collisions[i].element.classList.contains(\"killed\")){\n                            addScore(100, 0 , 0, enemies[collisions[i].element.dataset.index])\n\n                            character.jump.lock = false;\n                            character.jump.jumpPos = 0;\n                            jump('very-small', true)\n                            collisions[i].element.classList.add(\"killed\");\n                            playSound(19)\n\n\n                            setTimeout(function () {\n                                collisions[i].element.remove();\n                            }, 1000)\n                        }\n\n                        if(collisions[i].element.classList.contains(\"koopa\") && !collisions[i].element.classList.contains(\"killed\")){\n                            let enemy = enemies[collisions[i].element.dataset.index];\n\n                            character.jump.lock = false;\n                            character.jump.jumpPos = 0;\n                            jump('very-small', true)\n\n                            collisions[i].element.classList.remove(\"returning\")\n                            if(collisions[i].element.classList.contains(\"in-lack\") && !collisions[i].element.classList.contains(\"in-lack-running\")) {\n                                enemies[collisions[i].element.dataset.index].walk.direction = collisions[i].direction.x;\n\n                                collisions[i].element.classList.add(\"in-lack-running\")\n\n                                playSound(12);\n                                addScore(400,0,0, enemies[collisions[i].element.dataset.index])\n                            } else {\n                                if(enemy.timeouts.stopLack)\n                                    clearTimeout(enemy.timeouts.stopLack);\n\n                                if(collisions[i].element.classList.contains(\"in-lack-running\")) {\n                                    collisions[i].element.classList.remove(\"in-lack-running\")\n                                }\n\n                                enemy.timeouts.stopLack = setTimeout(function () {\n                                    if (!collisions[i].element.classList.contains(\"killed\") && !collisions[i].element.classList.contains(\"in-lack-running\")) {\n                                        collisions[i].element.classList.add(\"returning\")\n\n\n                                        enemy.timeouts.stopLack = setTimeout(function () {\n                                            if (!collisions[i].element.classList.contains(\"killed\") && !collisions[i].element.classList.contains(\"in-lack-running\")) {\n                                                collisions[i].element.classList.remove(\"in-lack\")\n                                                collisions[i].element.classList.remove(\"returning\")\n                                            }\n                                        }, 2000)\n                                    }\n\n                                }, 5000)\n                                collisions[i].element.classList.add(\"in-lack\");\n\n                                playSound(12);\n                                addScore(100,0,0, enemies[collisions[i].element.dataset.index])\n                            }\n                        }\n\n                    } else {\n                        canFall = false;\n                    }\n                }\n            }\n\n            if(canFall){\n                let jumpFill = 0;\n                if(character.jump.jumpPos > 15){\n                    jumpFill = GAME_SPEED / character.jump.jumpPos / 40;\n                }\n                character.jump.jumpPos -= GAME_SPEED / (70-character.jump.max) -  (character.jump.jumpPos / 40) - jumpFill;\n                character.position.y -= GAME_SPEED / (70-character.jump.max) - (character.jump.jumpPos / 40) - jumpFill;\n                character.jump.lock = true;\n            } else {\n                character.position.y = Math.round(character.position.y / 6.66667) * 6.66667;\n                character.jump.jumpPos = 0;\n                character.jump.lock = false;\n            }\n        } else {\n            character.jump.lock = false;\n            character.jump.isJumping = false;\n            character.jump.jumpPos = 0;\n            if(character.position.y < 0)\n                character.position.y = 0;\n        }\n        character.el.classList.remove(\"jump\");\n    }\n\n    if (character.walk.isWalking) {\n        character.el.classList.add(\"walk\");\n        let speed = GAME_SPEED / 100;\n        if(character.walk.speed === 'high'){\n            speed = GAME_SPEED / 60;\n        }\n        if(character.walk.speed === 'very-slow'){\n            speed = GAME_SPEED / 160;\n        }\n\n        if (character.walk.direction === \"right\") {\n\n            let canWalk = true\n            for(let i in collisions){\n                //console.log(collisions[i].distance)\n                if(collisions[i].direction.x === \"right\" && collisions[i].direction.must === \"y\" && !collisions[i].isCharacterUpper){\n                    canWalk = false;\n                }\n            }\n            if(canWalk)\n                character.position.x += speed;\n        } else {\n            let canWalk = true\n            for(let i in collisions){\n                //console.log(collisions[i].isCharacterUpper)\n                if(collisions[i].direction.x === \"left\" && collisions[i].direction.must === \"y\" && !collisions[i].isCharacterUpper){\n                    canWalk = false;\n                }\n            }\n            if(canWalk)\n                character.position.x -= speed;\n        }\n    } else {\n        character.el.classList.remove(\"walk\");\n    }\n\n    if (character.walk.direction === \"right\") {\n        character.el.style.transform = `translate(${parseFloat(character.position.x)}vh, -${parseFloat(character.position.y)}vh)`;\n    } else {\n        character.el.style.transform = `translate(${parseFloat(character.position.x)}vh, -${parseFloat(character.position.y)}vh) rotateY(-180deg)`;\n    }\n}\n\nsetInterval(function (){\n    requestAnimationFrame(update)\n}, 1000/character.fps);\n\n\nvar time = document.querySelector(\".ui .time\")\nfunction updateTime() {\n    let timeNum = time.textContent;\n    if(timeNum > 0){\n        time.textContent = (--timeNum).toString().padStart(3, '0');\n    } else {\n        if(character.timeouts.timer)\n            clearInterval(character.timeouts.timer);\n    }\n}\ncharacter.timeouts.timer = setInterval(updateTime, 1000);\n\n\nfunction isElementInViewport(element) {\n    const rect = element.getBoundingClientRect();\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n    let windowWidth = window.innerWidth || document.documentElement.clientWidth;\n\n    windowWidth += windowWidth * .2\n    // Check if the element is completely within the viewport bounds\n    const isCompletelyVisible = (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= windowHeight &&\n        rect.right <= windowWidth\n    );\n\n    // Check if the element is partially within the viewport bounds\n    const isPartiallyVisible = (\n        rect.top < windowHeight &&\n        rect.bottom > 0 &&\n        rect.left < windowWidth &&\n        rect.right > 0\n    );\n\n    // Return true if the element is either completely or partially visible\n    const is = isCompletelyVisible || isPartiallyVisible;\n    if(is) \n        element.classList.add(\"animate\")\n    else\n        element.classList.remove(\"animate\")\n\n    return is;\n}\n\nfunction  addScore(score, xAdd = 0, yAdd = 0, obj = character) {\n    character.score.number+=score;\n    character.score.el.textContent = character.score.number.toString().padStart(6, '0');\n\n    if(obj.el.classList.contains(\"big\")){\n        yAdd += 6.66;\n    }\n\n    let el = document.createElement(\"div\")\n    el.classList.add(\"score-tooltip\")\n    el.textContent = score;\n\n    let x = character.position.x + xAdd +  Math.random() * 4 - 2;\n    let y = Math.round((obj.position.y + yAdd) / 6.66667) * 6.66667;\n    el.style.transform = `translate(${parseFloat(x)}vh, -${parseFloat(y)}vh)`;\n    setTimeout(function () {\n        world.appendChild(el)\n\n        setTimeout(function () {\n             el.remove()\n        }, 500)\n    }, 300 + Math.random() * 100 - 50)\n}\n\n\nfunction getCollisions(el,log = false) {\n    const character = el;\n    let classes = '.enemy, .block, .block-hard, .block-ques, .hole, .flag-pole, .pipe';\n    if(el.classList.contains(\"character\"))\n        classes += ',.collide';\n    const collidables = document.querySelectorAll(classes);\n\n    const collisions = [];\n\n    const charRect = character.getBoundingClientRect();\n    const charCenterX = charRect.left + charRect.width / 2;\n    let charCenterY = charRect.top + charRect.height / 2;\n\n    let leftAdd = 0;\n    if(character.classList.contains(\"big\")){\n        charCenterY = charRect.top + charRect.height * .75;\n    }\n    if(character.classList.contains(\"character\")){\n        leftAdd += charRect.width * .25;\n        charRect.width = charRect.width * .96\n    }\n\n    collidables.forEach((collidable) => {\n        if(collidable !== el && !collidable.classList.contains(\"killed\") && !collidable.classList.contains(\"killing\") && !collidable.classList.contains(\"destroying\")) {\n            const collidableRect = collidable.getBoundingClientRect();\n            const collidableCenterX = collidableRect.left + collidableRect.width / 2;\n            const collidableCenterY = collidableRect.top + collidableRect.height / 2;\n\n            // Calculate the distance between the centers of the character and the collidable element\n            const distanceX = Math.abs(charCenterX - collidableCenterX);\n            const distanceY = Math.abs(charCenterY - collidableCenterY);\n            const distanceInPx = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n\n            // Convert the distance to vh units\n            //const distance = (distanceInPx / window.innerHeight) * 100;\n\n            // Detect collision by comparing the bounding rectangles\n            if(collidable.classList.contains(\"enemy\") && collidable.dataset.index == 16 && log) {\n                console.log(collidable)\n\n                console.log(collidableRect.bottom)\n                console.log(charRect.top)\n            }\n\n            let topAdd = 0;\n            if (collidable.classList.contains(\"in-lack\")){\n                topAdd += collidableRect.height * .43\n            }\n\n            if (\n                charRect.left + leftAdd < collidableRect.right &&\n                charRect.right > collidableRect.left &&\n                charRect.top < collidableRect.bottom + collidableRect.height * 0.1 &&\n                charRect.bottom + 1 > collidableRect.top + topAdd\n            ) {\n                // Calculate the direction of the collision\n                let direction = {\n                    x: charRect.left < collidableRect.left ? 'right' : 'left',\n                    y: charRect.top < collidableRect.top ? 'bottom' : 'top',\n                };\n\n                const verticalOverlap = Math.min(charRect.bottom, collidableRect.bottom) - Math.max(charRect.top, collidableRect.top);\n                const horizontalOverlap = Math.min(charRect.right, collidableRect.right) - Math.max(charRect.left, collidableRect.left);\n                if (verticalOverlap > horizontalOverlap) {\n                    direction.must = \"y\";\n                } else {\n                    direction.must = \"x\";\n                }\n\n                //console.log(charCenterY +\" - \"+ collidableRect.top)\n\n                // Collision detected, add the collidable element, direction, and vh (distance in vh units) to the collisions array\n                collisions.push({\n                    element: collidable,\n                    direction,\n                    distance: distanceInPx,\n                    isCharacterUpper: charCenterY < collidableRect.top\n                });\n            }\n        }\n    });\n    collisions.sort((a, b) => a.distance - b.distance);\n\n    return collisions;\n}\n\n\n\n\nfunction stopWalking() {\n    const character = window.character;\n\n    if (character.timeouts.stopWalking)\n         clearTimeout(character.timeouts.stopWalking)\n\n    character.walk.isStopWalking = true;\n    character.timeouts.stopWalking = setTimeout(() => {\n        //console.log(\"walk stopped\")\n\n        if(!character.walk.isKeyDown) {\n            character.walk.isWalking = false;\n            //console.log(\"walk stpped\")\n        }\n\n        character.walk.isStopWalking = false;\n    }, 100);\n\n}\n\nfunction jump(type = 'high', mute = false){\n    character.jump.max = 30;\n    if(type === 'small')\n        character.jump.max = 17;\n    if(type === 'very-small')\n        character.jump.max = 8;\n\n    if (!character.jump.lock) {\n        character.jump.isJumping = true;\n\n        if(!mute){\n            if(type === 'small' || type === 'very-small')\n                playSound(10)\n            else\n                playSound(11)\n        }\n    }\n}\n\n\nfunction goToLeft(isController = false) {\n    if(character.walk.isStopWalking && character.walk.direction === \"right\" &&\n        (Date.now() > character.walk.sideChangeTime + 1000 || character.walk.speed === 'high')\n    ) {\n        character.el.classList.add(\"changing-side\")\n        character.walk.isStopWalking = false;\n        setTimeout(function () {\n            character.walk.sideChangeTime = Date.now();\n            character.el.classList.remove(\"changing-side\")\n            character.walk.direction = \"left\";\n        }, 200)\n    } else if(character.walk.direction === \"right\") {\n        character.walk.sideChangeTime = Date.now();\n        character.walk.direction = \"left\";\n    }\n\n    character.walk.isKeyDown = true;\n    character.walk.isWalking = true;\n\n    if(!isController) {\n        if(character.timeouts.startWalking)\n            clearTimeout(character.timeouts.startWalking)\n\n        character.timeouts.startWalking = setTimeout(function () {\n            character.walk.isWalking = true;\n        }, 25)\n    } else {\n        character.walk.isWalkingGamepad = true;\n    }\n}\n\nfunction goToRight(isController = false) {\n    if(character.walk.isStopWalking &&  character.walk.direction === \"left\" &&\n        (Date.now() > character.walk.sideChangeTime + 1000 || character.walk.speed === 'high')\n    ) {\n        character.el.classList.add(\"changing-side\")\n        character.walk.isStopWalking = false;\n        setTimeout(function () {\n            character.walk.sideChangeTime = Date.now();\n            character.el.classList.remove(\"changing-side\")\n            character.walk.direction = \"right\";\n        }, 200)\n    } else if(character.walk.direction === \"left\"){\n        character.walk.sideChangeTime = Date.now();\n        character.walk.direction = \"right\";\n    }\n\n    character.walk.isKeyDown = true;\n    character.walk.isWalking = true;\n\n    if(!isController) {\n        if(character.timeouts.startWalking)\n            clearTimeout(character.timeouts.startWalking)\n\n        character.timeouts.startWalking = setTimeout(function () {\n            character.walk.isWalking = true;\n        }, 25)\n    } else {\n        character.walk.isWalkingGamepad = true;\n    }\n}\n\nfunction getDistance(element1, element2) {\n    const rect1 = element1.getBoundingClientRect();\n    const rect2 = element2.getBoundingClientRect();\n\n    const distanceInPixels = rect2.left - rect1.left;\n\n    const windowHeightInPixels = window.innerHeight;\n\n    return (distanceInPixels / windowHeightInPixels) * 100;\n}\n\n\n",null,"document.addEventListener(\"keydown\", (event) => {\n    const character = window.character;\n\n    if (event.key === \"ArrowLeft\" || event.key.toLowerCase() === \"a\") {\n        event.preventDefault();\n\n        goToLeft()\n    }\n\n    if (event.key === \"ArrowRight\" || event.key.toLowerCase() === \"d\") {\n        event.preventDefault();\n\n        goToRight()\n    }\n\n\n    if (event.key === \" \") {\n        event.preventDefault();\n\n        jump();\n    }\n\n    if(event.key === \"Shift\"){\n        event.preventDefault();\n        character.walk.speed = 'high';\n        character.el.classList.add(\"high-speed\")\n    }\n});\n\n\ndocument.addEventListener(\"keyup\", (event) => {\n    if (event.key === \"ArrowLeft\" || event.key === \"ArrowRight\" || event.key.toLowerCase() === \"a\" || event.key.toLowerCase() === \"d\") {\n        if(character.walk.isWalking && character.walk.isKeyDown) {\n            event.preventDefault();\n            character.walk.isKeyDown = false;\n            stopWalking();\n        }\n    }\n    if(event.key === \"Shift\"){\n        event.preventDefault();\n        character.walk.speed = 'slow';\n        character.el.classList.remove(\"high-speed\")\n    }\n});\n\nconsole.log(\"test\")\n",null,"// Gamepad support\nif (\"getGamepads\" in navigator) {\n    window.addEventListener(\"gamepadconnected\", (event) => {\n        const gamepad = event.gamepad;\n\n        document.querySelector(\".controls\").classList.add(\"has-gamepad\")\n        console.log(\"Gamepad connected:\", gamepad.id);\n    });\n\n    window.addEventListener(\"gamepaddisconnected\", (event) => {\n        const gamepad = event.gamepad;\n\n        document.querySelector(\".controls\").classList.add(\"has-gamepad\")\n        console.log(\"Gamepad disconnected:\", gamepad.id);\n    });\n\n    function gameLoop() {\n        // Get the list of connected gamepads\n        const gamepads = navigator.getGamepads();\n\n        // Process each gamepad\n        for (const gamepad of gamepads) {\n            if (gamepad) {\n                // Access the buttons and axes of the gamepad\n                // Example: gamepad.buttons[0].pressed, gamepad.axes[0], etc.\n\n                // Process the gamepad input and update the game state accordingly\n                processGamepadInput(gamepad);\n            }\n        }\n\n        // Continue the game loop\n        setTimeout(function () {\n            requestAnimationFrame(gameLoop);\n        },25)\n    }\n    gameLoop();\n\n// Function to process gamepad input\n    function processGamepadInput(gamepad) {\n        const character = window.character;\n        // Example handling of gamepad input\n        const threshold = 0.5; // Adjust this threshold based on your needs\n\n        // Check button inputs (buttons array)\n\n        if (gamepad.buttons[0].pressed || gamepad.buttons[1].pressed) {\n            // Button 0 is pressed (example)\n            console.log(\"fire\")\n        }\n\n        if(gamepad.buttons[3].pressed){\n            jump('small')\n        }\n\n         if (gamepad.buttons[2].pressed) {\n            // Button 0 is pressed (example)\n            jump()\n        }\n\n        if (gamepad.buttons[5].pressed || gamepad.buttons[7].pressed || gamepad.buttons[10].pressed) {\n            character.walk.speed = 'high';\n            character.el.classList.add(\"high-speed\")\n        } else {\n            character.walk.speed = 'slow';\n            character.el.classList.remove(\"high-speed\")\n        }\n\n\n        if (gamepad.buttons[15].pressed) {\n            goToRight(true)\n        }\n\n        if (gamepad.buttons[14].pressed) {\n            goToLeft(true)\n        }\n        // Check axis inputs (axes array)\n        const xAxis = gamepad.axes[0];\n        // Move character left or right ba{sed on xAxis (example)\n        if (Math.abs(xAxis) > 0.2) {\n            if(!gamepad.buttons[5].pressed || gamepad.buttons[7].pressed || gamepad.buttons[10].pressed) {\n                if (Math.abs(xAxis) < 0.5) {\n                    character.walk.speed = 'very-slow';\n                }\n            }\n\n            if (xAxis < 0) {\n                // Move left\n                goToLeft(true)\n            } else {\n                // Move right\n                goToRight(true)\n            }\n        } else {\n            if (character.walk.isWalkingGamepad) {\n                stopWalking();\n                character.walk.isKeyDown = false;\n                character.walk.isWalkingGamepad = false\n            }\n        }\n\n\n        // More handling of gamepad input as needed...\n    }\n}",null,"const cLeft = document.querySelector('.controls .c-left');\nconst cRight = document.querySelector('.controls .c-right');\nconst cTop = document.querySelector('.controls .c-top');\nconst cBottom = document.querySelector('.controls .c-bottom');\nconst cA = document.querySelector('.controls .c-a');\nconst cB = document.querySelector('.controls .c-b');\nconst cC = document.querySelector('.controls .c-c');\nconst cD = document.querySelector('.controls .c-d');\n\n\n// Function to handle touch-up event for all controls\nfunction handleTouchUp(event) {\n    event.preventDefault();\n\n    character.walk.isKeyDown = false;\n    stopWalking()\n}\n\ncRight.addEventListener('touchstart', function (event) {\n    event.preventDefault();\n    cRight.classList.add(\"touching\");\n\n    character.walk.isKeyDown = true;\n    goToRight()\n});\n\ncRight.addEventListener('touchend', function (event) {\n    event.preventDefault();\n    cRight.classList.remove(\"touching\");\n\n    handleTouchUp(event)\n});\n\n\n\n\ncLeft.addEventListener('touchstart', function (event){\n    event.preventDefault();\n    cLeft.classList.add(\"touching\");\n\n    goToLeft();\n});\n\ncLeft.addEventListener('touchend', function (event){\n    event.preventDefault();\n    cLeft.classList.remove(\"touching\");\n\n    handleTouchUp(event)\n});\n\n\ncTop.addEventListener('touchstart', function (event){\n    event.preventDefault();\n    cTop.classList.add(\"touching\");\n});\n\ncTop.addEventListener('touchend', function (event){\n    event.preventDefault();\n    cTop.classList.remove(\"touching\");\n});\n\n\n\ncBottom.addEventListener('touchstart', function (event){\n    event.preventDefault();\n    cBottom.classList.add(\"touching\");\n});\n\ncBottom.addEventListener('touchend', function (event){\n    event.preventDefault();\n    cBottom.classList.remove(\"touching\");\n});\n\n\n\n\ncA.addEventListener('touchstart', function (event) {\n    event.preventDefault();\n    cA.classList.add(\"touching\");\n\n});\n\ncA.addEventListener('touchend', function (event) {\n    event.preventDefault();\n    cA.classList.remove(\"touching\");\n});\n\n\n\ncB.addEventListener('touchstart', function (event) {\n    event.preventDefault();\n    cB.classList.add(\"touching\");\n\n    jump('small')\n});\n\ncB.addEventListener('touchend', function (event) {\n    event.preventDefault();\n    cB.classList.remove(\"touching\");\n});\n\n\n\ncC.addEventListener('touchstart', function (event) {\n    event.preventDefault();\n    cC.classList.add(\"touching\");\n\n    character.walk.isSpeedTouchDown = true;\n    setTimeout(function () {\n        if(character.walk.isSpeedTouchDown){\n            character.walk.speed = 'high';\n            character.el.classList.add(\"high-speed\")\n        }\n    }, 250)\n});\n\ncC.addEventListener('touchend', function (event) {\n    event.preventDefault();\n    cC.classList.remove(\"touching\");\n\n    character.walk.isSpeedTouchDown = false;\n    character.walk.speed = 'slow';\n    character.el.classList.remove(\"high-speed\")\n});\n\n\n\ncD.addEventListener('touchstart', function (event) {\n    event.preventDefault();\n    cD.classList.add(\"touching\");\n\n    jump();\n});\n\ncD.addEventListener('touchend', function (event) {\n    event.preventDefault();\n    cD.classList.remove(\"touching\");\n});\n\n\n\n\n\n\nfunction isTouchscreenDevice() {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n}\nif(isTouchscreenDevice()){\n    document.querySelector(\".controls\").classList.add(\"active\")\n}",null,"const soundFiles = [\n    '/assets/sfx/smb_1-up.wav',\n    '/assets/sfx/smb_bowserfalls.wav',\n    '/assets/sfx/smb_bowserfire.wav',\n    '/assets/sfx/smb_breakblock.wav',\n    '/assets/sfx/smb_bump.wav',\n    '/assets/sfx/smb_coin.wav',\n    '/assets/sfx/smb_fireball.wav',\n    '/assets/sfx/smb_fireworks.wav',\n    '/assets/sfx/smb_flagpole.wav',\n    '/assets/sfx/smb_gameover.wav',\n    '/assets/sfx/smb_jump-small.wav',\n    '/assets/sfx/smb_jump-super.wav',\n    '/assets/sfx/smb_kick.wav',\n    '/assets/sfx/smb_mariodie.wav',\n    '/assets/sfx/smb_pause.wav',\n    '/assets/sfx/smb_pipe.wav',\n    '/assets/sfx/smb_powerup.wav',\n    '/assets/sfx/smb_powerup_appears.wav',\n    '/assets/sfx/smb_stage_clear.wav',\n    '/assets/sfx/smb_stomp.wav',\n    '/assets/sfx/smb_vine.wav',\n    '/assets/sfx/smb_warning.wav',\n    '/assets/sfx/smb_world_clear.wav',\n];\n\n// Function to load sound files\nasync function loadSound(url) {\n    const response = await fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    return await audioContext.decodeAudioData(arrayBuffer);\n}\n\n// Create an AudioContext\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n// Create an array to store the audio buffers\nconst audioBuffers = [];\n\n// Create an array to store active audio sources\nconst activeSources = [];\n\n// Load all sound files\nPromise.all(soundFiles.map(url => loadSound(url))).then(buffers => {\n    audioBuffers.push(...buffers);\n});\n\n// Function to stop and remove an active audio source\nfunction stopSource(source) {\n    source.stop();\n    const index = activeSources.indexOf(source);\n    if (index !== -1) {\n        activeSources.splice(index, 1);\n    }\n}\n\n// Function to play a sound effect\nfunction playSound(index) {\n    if (index >= 0 && index < audioBuffers.length) {\n        // Stop any active audio sources\n        activeSources.forEach(stopSource);\n\n        const source = audioContext.createBufferSource();\n        source.buffer = audioBuffers[index];\n        source.connect(audioContext.destination);\n        source.start();\n        //console.log(soundFiles[index])\n        activeSources.push(source);\n    }\n}"]}